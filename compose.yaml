services:
  # Django/Gunicorn web Server
  django:
    build: ./django
    container_name: django
    image: ${DJANGO_IMAGE}
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      USER: ${USER}
      DATABASE: ${DATABASE}
      USERNAME: ${USERNAME}
      PASSWORD_LOCAL: ${PASSWORD_LOCAL}
      HOST_LOCAL: ${HOST_LOCAL}
      PASSWORD_RDS: ${PASSWORD_RDS}
      HOST_RDS: ${HOST_RDS}
    ports:
      - 8000:8000
    # network_mode: "host"

    depends_on:
      - nginx

  nginx:
    build: ./nginx
    container_name: nginx
    image: ${NGINX_IMAGE}
    # not gonna use volumes now because its not supported in AWS
    # all "volumes" will be "baked" into image for now
    #volumes:
    #  - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    #  - ./nginx/index.html:/var/www/index.html:ro
    #  - ./nginx/dist:/var/www/dist:ro
    #  - ./certbot/www/:/var/www/certbot/:ro
    #  - ./certbot/conf/:/etc/nginx/ssl/:ro
    ports:
      - 80:80
    # network_mode: "host"

  redis:
    container_name: redis
    #image: ${REDIS_IMAGE}
    ports: 6379:6379

  celery:
    build: ./celery
    container_name: celery
  #  image: ${CELERY_IMAGE}

  flower:
    build: ./flower
    container_name: flower
    #image: ${FLOWER_IMAGE}
    ports: 5555:5555


  #certbot:
  #  image: certbot/certbot:latest
  #  container_name: certbot
  #  volumes:
  #    - ./certbot/www/:/var/www/certbot/:rw
  #    - ./certbot/conf/:/etc/letsencrypt/:rw
    # command: certonly --webroot --webroot-path /var/www/certbot/ -d fattorestreet.com -d www.fattorestreet.com



  # local postgres container, RDS postgres server is preferred... for now
  #postgres:
  #  container_name: postgres
  #  image: postgres
  #  environment:
  #    POSTGRES_PASSWORD: ${PASSWORD_LOCAL}

  #  volumes:
  #    - postgres_data:/var/lib/postgresql/data
  #ports: 
  # - 5432:5432

  #volumes:
  #  postgres_data: